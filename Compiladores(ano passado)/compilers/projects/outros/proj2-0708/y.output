Terminals unused in grammar

   COMMA
   SEMICOLON
   ARRAY_OP
   STRUCT_DECL_LIST
   COMPOUND
   FUNCTION
   DECLARATION
   FUNCTION_DEFINITION
   PROGRAM
   EXPR_LIST
   TYPE_SPECIFIER
   DIRECT_DECL
   PARAM
   NEG
   EXPR
   TOPLD
   VALUE
   DECL
   DECLARATOR
   ARRAY_DECL
   IF_ELSE
   PARAM_FUNCTION
   TYPED_STR_ID
   TYPED_STR


Grammar

    0 $accept: initial $end

    1 initial: program

    2 program: function_definition
    3        | function_definition program
    4        | toplevel_declaration
    5        | toplevel_declaration program

    6 toplevel_declaration: type_specifier ';'
    7                     | type_specifier declarator ';'

    8 declaration: type_specifier ';'
    9            | type_specifier declarator ';'

   10 declaration_list: declaration
   11                 | declaration_list declaration

   12 function_definition: type_specifier declarator compound_statement

   13 type_specifier: VOID
   14               | INT
   15               | CHAR
   16               | STRUCT IDENTIFIER '{' struct_decl_list '}'
   17               | STRUCT IDENTIFIER
   18               | TYPEDEF STRUCT '{' struct_decl_list '}' IDENTIFIER
   19               | TYPEDEF STRUCT IDENTIFIER '{' struct_decl_list '}' IDENTIFIER

   20 struct_decl_list: type_specifier declarator ';'
   21                 | type_specifier declarator ';' struct_decl_list
   22                 | type_specifier declarator '=' CONSTANT ';'

   23 declarator: '*' declarator
   24           | direct_declarator

   25 direct_declarator: IDENTIFIER
   26                  | IDENTIFIER '(' parameter_list ')'
   27                  | IDENTIFIER '(' ')'
   28                  | IDENTIFIER '[' unary ']'

   29 parameter_list: type_specifier declarator
   30               | type_specifier declarator ',' parameter_list

   31 if_statement: IF '(' expression ')' if_clause
   32             | IF '(' expression ')' if_clause ELSE statement

   33 if_clause: statement

   34 statement: unary_expression '=' expression ';'
   35          | WHILE '(' expression ')' statement
   36          | RETURN expression ';'
   37          | if_statement
   38          | ';'
   39          | compound_statement
   40          | function_call ';'

   41 compound_statement: '{' '}'
   42                   | '{' declaration_list '}'
   43                   | '{' statement_list '}'
   44                   | '{' declaration_list statement_list '}'

   45 statement_list: statement
   46               | statement statement_list

   47 argument_list: expression
   48              | expression ',' argument_list
   49              | STRUCT IDENTIFIER
   50              | STRUCT IDENTIFIER ',' argument_list

   51 direct_function: IDENTIFIER '(' argument_list ')'
   52                | IDENTIFIER '(' ')'

   53 function_call: direct_function
   54              | '*' function_call
   55              | '&' function_call
   56              | '~' function_call

   57 expression: expression ops unary_expression
   58           | expression ops function_call
   59           | '(' expression ')'
   60           | unary_expression
   61           | function_call

   62 ops: MULT_OP
   63    | DIV_OP
   64    | ADD_OP
   65    | SUB_OP
   66    | LT_OP
   67    | GT_OP
   68    | EQ_OP
   69    | GE_OP
   70    | LE_OP
   71    | NE_OP
   72    | AND_OP
   73    | OR_OP

   74 unary_expression: unary PTR_OP unary_expression
   75                 | value '[' unary_expression ']'
   76                 | unary '+' unary_expression
   77                 | unary '-' unary_expression
   78                 | unary '*' unary_expression
   79                 | unary '/' unary_expression
   80                 | SIZEOF '(' type_specifier ')'
   81                 | '~' unary_expression
   82                 | '-' unary_expression
   83                 | '+' unary_expression
   84                 | unary

   85 unary: CONSTANT
   86      | value

   87 value: IDENTIFIER
   88      | '&' value
   89      | '*' value


Terminals, with rules where they appear

$end (0) 0
'&' (38) 55 88
'(' (40) 26 27 31 32 35 51 52 59 80
')' (41) 26 27 31 32 35 51 52 59 80
'*' (42) 23 54 78 89
'+' (43) 76 83
',' (44) 30 48 50
'-' (45) 77 82
'/' (47) 79
';' (59) 6 7 8 9 20 21 22 34 36 38 40
'=' (61) 22 34
'[' (91) 28 75
']' (93) 28 75
'{' (123) 16 18 19 41 42 43 44
'}' (125) 16 18 19 41 42 43 44
'~' (126) 56 81
error (256)
IDENTIFIER (258) 16 17 18 19 25 26 27 28 49 50 51 52 87
CONSTANT (259) 22 85
TYPEDEF (260) 18 19
INT (261) 14
CHAR (262) 15
VOID (263) 13
STRUCT (264) 16 17 18 19 49 50
IF (265) 31 32
ELSE (266) 32
WHILE (267) 35
RETURN (268) 36
SIZEOF (269) 80
COMMA (270)
SEMICOLON (271)
PTR_OP (272) 74
LT_OP (273) 66
GT_OP (274) 67
LE_OP (275) 70
GE_OP (276) 69
ARRAY_OP (277)
NE_OP (278) 71
EQ_OP (279) 68
AND_OP (280) 72
OR_OP (281) 73
ADD_OP (282) 64
SUB_OP (283) 65
MULT_OP (284) 62
DIV_OP (285) 63
STRUCT_DECL_LIST (286)
COMPOUND (287)
STATE (288)
FUNCTION (289)
DECLARATION (290)
FUNCTION_DEFINITION (291)
PROGRAM (292)
EXPR_LIST (293)
TYPE_SPECIFIER (294)
DIRECT_DECL (295)
PARAM (296)
NEG (297)
EXPR (298)
TOPLD (299)
VALUE (300)
DECL (301)
DECLARATOR (302)
ARRAY_DECL (303)
IF_ELSE (304)
PARAM_FUNCTION (305)
TYPED_STR_ID (306)
TYPED_STR (307)


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
initial (69)
    on left: 1, on right: 0
program (70)
    on left: 2 3 4 5, on right: 1 3 5
toplevel_declaration (71)
    on left: 6 7, on right: 4 5
declaration (72)
    on left: 8 9, on right: 10 11
declaration_list (73)
    on left: 10 11, on right: 11 42 44
function_definition (74)
    on left: 12, on right: 2 3
type_specifier (75)
    on left: 13 14 15 16 17 18 19, on right: 6 7 8 9 12 20 21 22 29
    30 80
struct_decl_list (76)
    on left: 20 21 22, on right: 16 18 19 21
declarator (77)
    on left: 23 24, on right: 7 9 12 20 21 22 23 29 30
direct_declarator (78)
    on left: 25 26 27 28, on right: 24
parameter_list (79)
    on left: 29 30, on right: 26 30
if_statement (80)
    on left: 31 32, on right: 37
if_clause (81)
    on left: 33, on right: 31 32
statement (82)
    on left: 34 35 36 37 38 39 40, on right: 32 33 35 45 46
compound_statement (83)
    on left: 41 42 43 44, on right: 12 39
statement_list (84)
    on left: 45 46, on right: 43 44 46
argument_list (85)
    on left: 47 48 49 50, on right: 48 50 51
direct_function (86)
    on left: 51 52, on right: 53
function_call (87)
    on left: 53 54 55 56, on right: 40 54 55 56 58 61
expression (88)
    on left: 57 58 59 60 61, on right: 31 32 34 35 36 47 48 57 58 59
ops (89)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73, on right: 57 58
unary_expression (90)
    on left: 74 75 76 77 78 79 80 81 82 83 84, on right: 34 57 60 74
    75 76 77 78 79 81 82 83
unary (91)
    on left: 85 86, on right: 28 74 76 77 78 79 84
value (92)
    on left: 87 88 89, on right: 75 86 88 89


state 0

    0 $accept: . initial $end

    TYPEDEF  shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    VOID     shift, and go to state 4
    STRUCT   shift, and go to state 5

    initial               go to state 6
    program               go to state 7
    toplevel_declaration  go to state 8
    function_definition   go to state 9
    type_specifier        go to state 10


state 1

   18 type_specifier: TYPEDEF . STRUCT '{' struct_decl_list '}' IDENTIFIER
   19               | TYPEDEF . STRUCT IDENTIFIER '{' struct_decl_list '}' IDENTIFIER

    STRUCT  shift, and go to state 11


state 2

   14 type_specifier: INT .

    $default  reduce using rule 14 (type_specifier)


state 3

   15 type_specifier: CHAR .

    $default  reduce using rule 15 (type_specifier)


state 4

   13 type_specifier: VOID .

    $default  reduce using rule 13 (type_specifier)


state 5

   16 type_specifier: STRUCT . IDENTIFIER '{' struct_decl_list '}'
   17               | STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 12


state 6

    0 $accept: initial . $end

    $end  shift, and go to state 13


state 7

    1 initial: program .

    $default  reduce using rule 1 (initial)


state 8

    4 program: toplevel_declaration .
    5        | toplevel_declaration . program

    TYPEDEF  shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    VOID     shift, and go to state 4
    STRUCT   shift, and go to state 5

    $default  reduce using rule 4 (program)

    program               go to state 14
    toplevel_declaration  go to state 8
    function_definition   go to state 9
    type_specifier        go to state 10


state 9

    2 program: function_definition .
    3        | function_definition . program

    TYPEDEF  shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    VOID     shift, and go to state 4
    STRUCT   shift, and go to state 5

    $default  reduce using rule 2 (program)

    program               go to state 15
    toplevel_declaration  go to state 8
    function_definition   go to state 9
    type_specifier        go to state 10


state 10

    6 toplevel_declaration: type_specifier . ';'
    7                     | type_specifier . declarator ';'
   12 function_definition: type_specifier . declarator compound_statement

    IDENTIFIER  shift, and go to state 16
    '*'         shift, and go to state 17
    ';'         shift, and go to state 18

    declarator         go to state 19
    direct_declarator  go to state 20


state 11

   18 type_specifier: TYPEDEF STRUCT . '{' struct_decl_list '}' IDENTIFIER
   19               | TYPEDEF STRUCT . IDENTIFIER '{' struct_decl_list '}' IDENTIFIER

    IDENTIFIER  shift, and go to state 21
    '{'         shift, and go to state 22


state 12

   16 type_specifier: STRUCT IDENTIFIER . '{' struct_decl_list '}'
   17               | STRUCT IDENTIFIER .

    '{'  shift, and go to state 23

    $default  reduce using rule 17 (type_specifier)


state 13

    0 $accept: initial $end .

    $default  accept


state 14

    5 program: toplevel_declaration program .

    $default  reduce using rule 5 (program)


state 15

    3 program: function_definition program .

    $default  reduce using rule 3 (program)


state 16

   25 direct_declarator: IDENTIFIER .
   26                  | IDENTIFIER . '(' parameter_list ')'
   27                  | IDENTIFIER . '(' ')'
   28                  | IDENTIFIER . '[' unary ']'

    '('  shift, and go to state 24
    '['  shift, and go to state 25

    $default  reduce using rule 25 (direct_declarator)


state 17

   23 declarator: '*' . declarator

    IDENTIFIER  shift, and go to state 16
    '*'         shift, and go to state 17

    declarator         go to state 26
    direct_declarator  go to state 20


state 18

    6 toplevel_declaration: type_specifier ';' .

    $default  reduce using rule 6 (toplevel_declaration)


state 19

    7 toplevel_declaration: type_specifier declarator . ';'
   12 function_definition: type_specifier declarator . compound_statement

    ';'  shift, and go to state 27
    '{'  shift, and go to state 28

    compound_statement  go to state 29


state 20

   24 declarator: direct_declarator .

    $default  reduce using rule 24 (declarator)


state 21

   19 type_specifier: TYPEDEF STRUCT IDENTIFIER . '{' struct_decl_list '}' IDENTIFIER

    '{'  shift, and go to state 30


state 22

   18 type_specifier: TYPEDEF STRUCT '{' . struct_decl_list '}' IDENTIFIER

    TYPEDEF  shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    VOID     shift, and go to state 4
    STRUCT   shift, and go to state 5

    type_specifier    go to state 31
    struct_decl_list  go to state 32


state 23

   16 type_specifier: STRUCT IDENTIFIER '{' . struct_decl_list '}'

    TYPEDEF  shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    VOID     shift, and go to state 4
    STRUCT   shift, and go to state 5

    type_specifier    go to state 31
    struct_decl_list  go to state 33


state 24

   26 direct_declarator: IDENTIFIER '(' . parameter_list ')'
   27                  | IDENTIFIER '(' . ')'

    TYPEDEF  shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    VOID     shift, and go to state 4
    STRUCT   shift, and go to state 5
    ')'      shift, and go to state 34

    type_specifier  go to state 35
    parameter_list  go to state 36


state 25

   28 direct_declarator: IDENTIFIER '[' . unary ']'

    IDENTIFIER  shift, and go to state 37
    CONSTANT    shift, and go to state 38
    '*'         shift, and go to state 39
    '&'         shift, and go to state 40

    unary  go to state 41
    value  go to state 42


state 26

   23 declarator: '*' declarator .

    $default  reduce using rule 23 (declarator)


state 27

    7 toplevel_declaration: type_specifier declarator ';' .

    $default  reduce using rule 7 (toplevel_declaration)


state 28

   41 compound_statement: '{' . '}'
   42                   | '{' . declaration_list '}'
   43                   | '{' . statement_list '}'
   44                   | '{' . declaration_list statement_list '}'

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    TYPEDEF     shift, and go to state 1
    INT         shift, and go to state 2
    CHAR        shift, and go to state 3
    VOID        shift, and go to state 4
    STRUCT      shift, and go to state 5
    IF          shift, and go to state 44
    WHILE       shift, and go to state 45
    RETURN      shift, and go to state 46
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    ';'         shift, and go to state 51
    '{'         shift, and go to state 28
    '}'         shift, and go to state 52
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    declaration         go to state 55
    declaration_list    go to state 56
    type_specifier      go to state 57
    if_statement        go to state 58
    statement           go to state 59
    compound_statement  go to state 60
    statement_list      go to state 61
    direct_function     go to state 62
    function_call       go to state 63
    unary_expression    go to state 64
    unary               go to state 65
    value               go to state 66


state 29

   12 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 12 (function_definition)


state 30

   19 type_specifier: TYPEDEF STRUCT IDENTIFIER '{' . struct_decl_list '}' IDENTIFIER

    TYPEDEF  shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    VOID     shift, and go to state 4
    STRUCT   shift, and go to state 5

    type_specifier    go to state 31
    struct_decl_list  go to state 67


state 31

   20 struct_decl_list: type_specifier . declarator ';'
   21                 | type_specifier . declarator ';' struct_decl_list
   22                 | type_specifier . declarator '=' CONSTANT ';'

    IDENTIFIER  shift, and go to state 16
    '*'         shift, and go to state 17

    declarator         go to state 68
    direct_declarator  go to state 20


state 32

   18 type_specifier: TYPEDEF STRUCT '{' struct_decl_list . '}' IDENTIFIER

    '}'  shift, and go to state 69


state 33

   16 type_specifier: STRUCT IDENTIFIER '{' struct_decl_list . '}'

    '}'  shift, and go to state 70


state 34

   27 direct_declarator: IDENTIFIER '(' ')' .

    $default  reduce using rule 27 (direct_declarator)


state 35

   29 parameter_list: type_specifier . declarator
   30               | type_specifier . declarator ',' parameter_list

    IDENTIFIER  shift, and go to state 16
    '*'         shift, and go to state 17

    declarator         go to state 71
    direct_declarator  go to state 20


state 36

   26 direct_declarator: IDENTIFIER '(' parameter_list . ')'

    ')'  shift, and go to state 72


state 37

   87 value: IDENTIFIER .

    $default  reduce using rule 87 (value)


state 38

   85 unary: CONSTANT .

    $default  reduce using rule 85 (unary)


state 39

   89 value: '*' . value

    IDENTIFIER  shift, and go to state 37
    '*'         shift, and go to state 39
    '&'         shift, and go to state 40

    value  go to state 73


state 40

   88 value: '&' . value

    IDENTIFIER  shift, and go to state 37
    '*'         shift, and go to state 39
    '&'         shift, and go to state 40

    value  go to state 74


state 41

   28 direct_declarator: IDENTIFIER '[' unary . ']'

    ']'  shift, and go to state 75


state 42

   86 unary: value .

    $default  reduce using rule 86 (unary)


state 43

   51 direct_function: IDENTIFIER . '(' argument_list ')'
   52                | IDENTIFIER . '(' ')'
   87 value: IDENTIFIER .

    '('  shift, and go to state 76

    $default  reduce using rule 87 (value)


state 44

   31 if_statement: IF . '(' expression ')' if_clause
   32             | IF . '(' expression ')' if_clause ELSE statement

    '('  shift, and go to state 77


state 45

   35 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 78


state 46

   36 statement: RETURN . expression ';'

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '('         shift, and go to state 79
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    direct_function   go to state 62
    function_call     go to state 80
    expression        go to state 81
    unary_expression  go to state 82
    unary             go to state 65
    value             go to state 66


state 47

   80 unary_expression: SIZEOF . '(' type_specifier ')'

    '('  shift, and go to state 83


state 48

   54 function_call: '*' . function_call
   89 value: '*' . value

    IDENTIFIER  shift, and go to state 43
    '*'         shift, and go to state 48
    '&'         shift, and go to state 53
    '~'         shift, and go to state 84

    direct_function  go to state 62
    function_call    go to state 85
    value            go to state 73


state 49

   83 unary_expression: '+' . unary_expression

    IDENTIFIER  shift, and go to state 37
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 39
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '&'         shift, and go to state 40
    '~'         shift, and go to state 86

    unary_expression  go to state 87
    unary             go to state 65
    value             go to state 66


state 50

   82 unary_expression: '-' . unary_expression

    IDENTIFIER  shift, and go to state 37
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 39
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '&'         shift, and go to state 40
    '~'         shift, and go to state 86

    unary_expression  go to state 88
    unary             go to state 65
    value             go to state 66


state 51

   38 statement: ';' .

    $default  reduce using rule 38 (statement)


state 52

   41 compound_statement: '{' '}' .

    $default  reduce using rule 41 (compound_statement)


state 53

   55 function_call: '&' . function_call
   88 value: '&' . value

    IDENTIFIER  shift, and go to state 43
    '*'         shift, and go to state 48
    '&'         shift, and go to state 53
    '~'         shift, and go to state 84

    direct_function  go to state 62
    function_call    go to state 89
    value            go to state 74


state 54

   56 function_call: '~' . function_call
   81 unary_expression: '~' . unary_expression

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    direct_function   go to state 62
    function_call     go to state 90
    unary_expression  go to state 91
    unary             go to state 65
    value             go to state 66


state 55

   10 declaration_list: declaration .

    $default  reduce using rule 10 (declaration_list)


state 56

   11 declaration_list: declaration_list . declaration
   42 compound_statement: '{' declaration_list . '}'
   44                   | '{' declaration_list . statement_list '}'

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    TYPEDEF     shift, and go to state 1
    INT         shift, and go to state 2
    CHAR        shift, and go to state 3
    VOID        shift, and go to state 4
    STRUCT      shift, and go to state 5
    IF          shift, and go to state 44
    WHILE       shift, and go to state 45
    RETURN      shift, and go to state 46
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    ';'         shift, and go to state 51
    '{'         shift, and go to state 28
    '}'         shift, and go to state 92
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    declaration         go to state 93
    type_specifier      go to state 57
    if_statement        go to state 58
    statement           go to state 59
    compound_statement  go to state 60
    statement_list      go to state 94
    direct_function     go to state 62
    function_call       go to state 63
    unary_expression    go to state 64
    unary               go to state 65
    value               go to state 66


state 57

    8 declaration: type_specifier . ';'
    9            | type_specifier . declarator ';'

    IDENTIFIER  shift, and go to state 16
    '*'         shift, and go to state 17
    ';'         shift, and go to state 95

    declarator         go to state 96
    direct_declarator  go to state 20


state 58

   37 statement: if_statement .

    $default  reduce using rule 37 (statement)


state 59

   45 statement_list: statement .
   46               | statement . statement_list

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    IF          shift, and go to state 44
    WHILE       shift, and go to state 45
    RETURN      shift, and go to state 46
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    ';'         shift, and go to state 51
    '{'         shift, and go to state 28
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    $default  reduce using rule 45 (statement_list)

    if_statement        go to state 58
    statement           go to state 59
    compound_statement  go to state 60
    statement_list      go to state 97
    direct_function     go to state 62
    function_call       go to state 63
    unary_expression    go to state 64
    unary               go to state 65
    value               go to state 66


state 60

   39 statement: compound_statement .

    $default  reduce using rule 39 (statement)


state 61

   43 compound_statement: '{' statement_list . '}'

    '}'  shift, and go to state 98


state 62

   53 function_call: direct_function .

    $default  reduce using rule 53 (function_call)


state 63

   40 statement: function_call . ';'

    ';'  shift, and go to state 99


state 64

   34 statement: unary_expression . '=' expression ';'

    '='  shift, and go to state 100


state 65

   74 unary_expression: unary . PTR_OP unary_expression
   76                 | unary . '+' unary_expression
   77                 | unary . '-' unary_expression
   78                 | unary . '*' unary_expression
   79                 | unary . '/' unary_expression
   84                 | unary .

    PTR_OP  shift, and go to state 101
    '*'     shift, and go to state 102
    '/'     shift, and go to state 103
    '+'     shift, and go to state 104
    '-'     shift, and go to state 105

    $default  reduce using rule 84 (unary_expression)


state 66

   75 unary_expression: value . '[' unary_expression ']'
   86 unary: value .

    '['  shift, and go to state 106

    $default  reduce using rule 86 (unary)


state 67

   19 type_specifier: TYPEDEF STRUCT IDENTIFIER '{' struct_decl_list . '}' IDENTIFIER

    '}'  shift, and go to state 107


state 68

   20 struct_decl_list: type_specifier declarator . ';'
   21                 | type_specifier declarator . ';' struct_decl_list
   22                 | type_specifier declarator . '=' CONSTANT ';'

    '='  shift, and go to state 108
    ';'  shift, and go to state 109


state 69

   18 type_specifier: TYPEDEF STRUCT '{' struct_decl_list '}' . IDENTIFIER

    IDENTIFIER  shift, and go to state 110


state 70

   16 type_specifier: STRUCT IDENTIFIER '{' struct_decl_list '}' .

    $default  reduce using rule 16 (type_specifier)


state 71

   29 parameter_list: type_specifier declarator .
   30               | type_specifier declarator . ',' parameter_list

    ','  shift, and go to state 111

    $default  reduce using rule 29 (parameter_list)


state 72

   26 direct_declarator: IDENTIFIER '(' parameter_list ')' .

    $default  reduce using rule 26 (direct_declarator)


state 73

   89 value: '*' value .

    $default  reduce using rule 89 (value)


state 74

   88 value: '&' value .

    $default  reduce using rule 88 (value)


state 75

   28 direct_declarator: IDENTIFIER '[' unary ']' .

    $default  reduce using rule 28 (direct_declarator)


state 76

   51 direct_function: IDENTIFIER '(' . argument_list ')'
   52                | IDENTIFIER '(' . ')'

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    STRUCT      shift, and go to state 112
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '('         shift, and go to state 79
    ')'         shift, and go to state 113
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    argument_list     go to state 114
    direct_function   go to state 62
    function_call     go to state 80
    expression        go to state 115
    unary_expression  go to state 82
    unary             go to state 65
    value             go to state 66


state 77

   31 if_statement: IF '(' . expression ')' if_clause
   32             | IF '(' . expression ')' if_clause ELSE statement

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '('         shift, and go to state 79
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    direct_function   go to state 62
    function_call     go to state 80
    expression        go to state 116
    unary_expression  go to state 82
    unary             go to state 65
    value             go to state 66


state 78

   35 statement: WHILE '(' . expression ')' statement

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '('         shift, and go to state 79
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    direct_function   go to state 62
    function_call     go to state 80
    expression        go to state 117
    unary_expression  go to state 82
    unary             go to state 65
    value             go to state 66


state 79

   59 expression: '(' . expression ')'

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '('         shift, and go to state 79
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    direct_function   go to state 62
    function_call     go to state 80
    expression        go to state 118
    unary_expression  go to state 82
    unary             go to state 65
    value             go to state 66


state 80

   61 expression: function_call .

    $default  reduce using rule 61 (expression)


state 81

   36 statement: RETURN expression . ';'
   57 expression: expression . ops unary_expression
   58           | expression . ops function_call

    LT_OP    shift, and go to state 119
    GT_OP    shift, and go to state 120
    LE_OP    shift, and go to state 121
    GE_OP    shift, and go to state 122
    NE_OP    shift, and go to state 123
    EQ_OP    shift, and go to state 124
    AND_OP   shift, and go to state 125
    OR_OP    shift, and go to state 126
    ADD_OP   shift, and go to state 127
    SUB_OP   shift, and go to state 128
    MULT_OP  shift, and go to state 129
    DIV_OP   shift, and go to state 130
    ';'      shift, and go to state 131

    ops  go to state 132


state 82

   60 expression: unary_expression .

    $default  reduce using rule 60 (expression)


state 83

   80 unary_expression: SIZEOF '(' . type_specifier ')'

    TYPEDEF  shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    VOID     shift, and go to state 4
    STRUCT   shift, and go to state 5

    type_specifier  go to state 133


state 84

   56 function_call: '~' . function_call

    IDENTIFIER  shift, and go to state 134
    '*'         shift, and go to state 135
    '&'         shift, and go to state 136
    '~'         shift, and go to state 84

    direct_function  go to state 62
    function_call    go to state 90


state 85

   54 function_call: '*' function_call .

    $default  reduce using rule 54 (function_call)


state 86

   81 unary_expression: '~' . unary_expression

    IDENTIFIER  shift, and go to state 37
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 39
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '&'         shift, and go to state 40
    '~'         shift, and go to state 86

    unary_expression  go to state 91
    unary             go to state 65
    value             go to state 66


state 87

   83 unary_expression: '+' unary_expression .

    $default  reduce using rule 83 (unary_expression)


state 88

   82 unary_expression: '-' unary_expression .

    $default  reduce using rule 82 (unary_expression)


state 89

   55 function_call: '&' function_call .

    $default  reduce using rule 55 (function_call)


state 90

   56 function_call: '~' function_call .

    $default  reduce using rule 56 (function_call)


state 91

   81 unary_expression: '~' unary_expression .

    $default  reduce using rule 81 (unary_expression)


state 92

   42 compound_statement: '{' declaration_list '}' .

    $default  reduce using rule 42 (compound_statement)


state 93

   11 declaration_list: declaration_list declaration .

    $default  reduce using rule 11 (declaration_list)


state 94

   44 compound_statement: '{' declaration_list statement_list . '}'

    '}'  shift, and go to state 137


state 95

    8 declaration: type_specifier ';' .

    $default  reduce using rule 8 (declaration)


state 96

    9 declaration: type_specifier declarator . ';'

    ';'  shift, and go to state 138


state 97

   46 statement_list: statement statement_list .

    $default  reduce using rule 46 (statement_list)


state 98

   43 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 43 (compound_statement)


state 99

   40 statement: function_call ';' .

    $default  reduce using rule 40 (statement)


state 100

   34 statement: unary_expression '=' . expression ';'

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '('         shift, and go to state 79
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    direct_function   go to state 62
    function_call     go to state 80
    expression        go to state 139
    unary_expression  go to state 82
    unary             go to state 65
    value             go to state 66


state 101

   74 unary_expression: unary PTR_OP . unary_expression

    IDENTIFIER  shift, and go to state 37
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 39
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '&'         shift, and go to state 40
    '~'         shift, and go to state 86

    unary_expression  go to state 140
    unary             go to state 65
    value             go to state 66


state 102

   78 unary_expression: unary '*' . unary_expression

    IDENTIFIER  shift, and go to state 37
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 39
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '&'         shift, and go to state 40
    '~'         shift, and go to state 86

    unary_expression  go to state 141
    unary             go to state 65
    value             go to state 66


state 103

   79 unary_expression: unary '/' . unary_expression

    IDENTIFIER  shift, and go to state 37
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 39
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '&'         shift, and go to state 40
    '~'         shift, and go to state 86

    unary_expression  go to state 142
    unary             go to state 65
    value             go to state 66


state 104

   76 unary_expression: unary '+' . unary_expression

    IDENTIFIER  shift, and go to state 37
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 39
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '&'         shift, and go to state 40
    '~'         shift, and go to state 86

    unary_expression  go to state 143
    unary             go to state 65
    value             go to state 66


state 105

   77 unary_expression: unary '-' . unary_expression

    IDENTIFIER  shift, and go to state 37
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 39
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '&'         shift, and go to state 40
    '~'         shift, and go to state 86

    unary_expression  go to state 144
    unary             go to state 65
    value             go to state 66


state 106

   75 unary_expression: value '[' . unary_expression ']'

    IDENTIFIER  shift, and go to state 37
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 39
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '&'         shift, and go to state 40
    '~'         shift, and go to state 86

    unary_expression  go to state 145
    unary             go to state 65
    value             go to state 66


state 107

   19 type_specifier: TYPEDEF STRUCT IDENTIFIER '{' struct_decl_list '}' . IDENTIFIER

    IDENTIFIER  shift, and go to state 146


state 108

   22 struct_decl_list: type_specifier declarator '=' . CONSTANT ';'

    CONSTANT  shift, and go to state 147


state 109

   20 struct_decl_list: type_specifier declarator ';' .
   21                 | type_specifier declarator ';' . struct_decl_list

    TYPEDEF  shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    VOID     shift, and go to state 4
    STRUCT   shift, and go to state 5

    $default  reduce using rule 20 (struct_decl_list)

    type_specifier    go to state 31
    struct_decl_list  go to state 148


state 110

   18 type_specifier: TYPEDEF STRUCT '{' struct_decl_list '}' IDENTIFIER .

    $default  reduce using rule 18 (type_specifier)


state 111

   30 parameter_list: type_specifier declarator ',' . parameter_list

    TYPEDEF  shift, and go to state 1
    INT      shift, and go to state 2
    CHAR     shift, and go to state 3
    VOID     shift, and go to state 4
    STRUCT   shift, and go to state 5

    type_specifier  go to state 35
    parameter_list  go to state 149


state 112

   49 argument_list: STRUCT . IDENTIFIER
   50              | STRUCT . IDENTIFIER ',' argument_list

    IDENTIFIER  shift, and go to state 150


state 113

   52 direct_function: IDENTIFIER '(' ')' .

    $default  reduce using rule 52 (direct_function)


state 114

   51 direct_function: IDENTIFIER '(' argument_list . ')'

    ')'  shift, and go to state 151


state 115

   47 argument_list: expression .
   48              | expression . ',' argument_list
   57 expression: expression . ops unary_expression
   58           | expression . ops function_call

    LT_OP    shift, and go to state 119
    GT_OP    shift, and go to state 120
    LE_OP    shift, and go to state 121
    GE_OP    shift, and go to state 122
    NE_OP    shift, and go to state 123
    EQ_OP    shift, and go to state 124
    AND_OP   shift, and go to state 125
    OR_OP    shift, and go to state 126
    ADD_OP   shift, and go to state 127
    SUB_OP   shift, and go to state 128
    MULT_OP  shift, and go to state 129
    DIV_OP   shift, and go to state 130
    ','      shift, and go to state 152

    $default  reduce using rule 47 (argument_list)

    ops  go to state 132


state 116

   31 if_statement: IF '(' expression . ')' if_clause
   32             | IF '(' expression . ')' if_clause ELSE statement
   57 expression: expression . ops unary_expression
   58           | expression . ops function_call

    LT_OP    shift, and go to state 119
    GT_OP    shift, and go to state 120
    LE_OP    shift, and go to state 121
    GE_OP    shift, and go to state 122
    NE_OP    shift, and go to state 123
    EQ_OP    shift, and go to state 124
    AND_OP   shift, and go to state 125
    OR_OP    shift, and go to state 126
    ADD_OP   shift, and go to state 127
    SUB_OP   shift, and go to state 128
    MULT_OP  shift, and go to state 129
    DIV_OP   shift, and go to state 130
    ')'      shift, and go to state 153

    ops  go to state 132


state 117

   35 statement: WHILE '(' expression . ')' statement
   57 expression: expression . ops unary_expression
   58           | expression . ops function_call

    LT_OP    shift, and go to state 119
    GT_OP    shift, and go to state 120
    LE_OP    shift, and go to state 121
    GE_OP    shift, and go to state 122
    NE_OP    shift, and go to state 123
    EQ_OP    shift, and go to state 124
    AND_OP   shift, and go to state 125
    OR_OP    shift, and go to state 126
    ADD_OP   shift, and go to state 127
    SUB_OP   shift, and go to state 128
    MULT_OP  shift, and go to state 129
    DIV_OP   shift, and go to state 130
    ')'      shift, and go to state 154

    ops  go to state 132


state 118

   57 expression: expression . ops unary_expression
   58           | expression . ops function_call
   59           | '(' expression . ')'

    LT_OP    shift, and go to state 119
    GT_OP    shift, and go to state 120
    LE_OP    shift, and go to state 121
    GE_OP    shift, and go to state 122
    NE_OP    shift, and go to state 123
    EQ_OP    shift, and go to state 124
    AND_OP   shift, and go to state 125
    OR_OP    shift, and go to state 126
    ADD_OP   shift, and go to state 127
    SUB_OP   shift, and go to state 128
    MULT_OP  shift, and go to state 129
    DIV_OP   shift, and go to state 130
    ')'      shift, and go to state 155

    ops  go to state 132


state 119

   66 ops: LT_OP .

    $default  reduce using rule 66 (ops)


state 120

   67 ops: GT_OP .

    $default  reduce using rule 67 (ops)


state 121

   70 ops: LE_OP .

    $default  reduce using rule 70 (ops)


state 122

   69 ops: GE_OP .

    $default  reduce using rule 69 (ops)


state 123

   71 ops: NE_OP .

    $default  reduce using rule 71 (ops)


state 124

   68 ops: EQ_OP .

    $default  reduce using rule 68 (ops)


state 125

   72 ops: AND_OP .

    $default  reduce using rule 72 (ops)


state 126

   73 ops: OR_OP .

    $default  reduce using rule 73 (ops)


state 127

   64 ops: ADD_OP .

    $default  reduce using rule 64 (ops)


state 128

   65 ops: SUB_OP .

    $default  reduce using rule 65 (ops)


state 129

   62 ops: MULT_OP .

    $default  reduce using rule 62 (ops)


state 130

   63 ops: DIV_OP .

    $default  reduce using rule 63 (ops)


state 131

   36 statement: RETURN expression ';' .

    $default  reduce using rule 36 (statement)


state 132

   57 expression: expression ops . unary_expression
   58           | expression ops . function_call

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    direct_function   go to state 62
    function_call     go to state 156
    unary_expression  go to state 157
    unary             go to state 65
    value             go to state 66


state 133

   80 unary_expression: SIZEOF '(' type_specifier . ')'

    ')'  shift, and go to state 158


state 134

   51 direct_function: IDENTIFIER . '(' argument_list ')'
   52                | IDENTIFIER . '(' ')'

    '('  shift, and go to state 76


state 135

   54 function_call: '*' . function_call

    IDENTIFIER  shift, and go to state 134
    '*'         shift, and go to state 135
    '&'         shift, and go to state 136
    '~'         shift, and go to state 84

    direct_function  go to state 62
    function_call    go to state 85


state 136

   55 function_call: '&' . function_call

    IDENTIFIER  shift, and go to state 134
    '*'         shift, and go to state 135
    '&'         shift, and go to state 136
    '~'         shift, and go to state 84

    direct_function  go to state 62
    function_call    go to state 89


state 137

   44 compound_statement: '{' declaration_list statement_list '}' .

    $default  reduce using rule 44 (compound_statement)


state 138

    9 declaration: type_specifier declarator ';' .

    $default  reduce using rule 9 (declaration)


state 139

   34 statement: unary_expression '=' expression . ';'
   57 expression: expression . ops unary_expression
   58           | expression . ops function_call

    LT_OP    shift, and go to state 119
    GT_OP    shift, and go to state 120
    LE_OP    shift, and go to state 121
    GE_OP    shift, and go to state 122
    NE_OP    shift, and go to state 123
    EQ_OP    shift, and go to state 124
    AND_OP   shift, and go to state 125
    OR_OP    shift, and go to state 126
    ADD_OP   shift, and go to state 127
    SUB_OP   shift, and go to state 128
    MULT_OP  shift, and go to state 129
    DIV_OP   shift, and go to state 130
    ';'      shift, and go to state 159

    ops  go to state 132


state 140

   74 unary_expression: unary PTR_OP unary_expression .

    $default  reduce using rule 74 (unary_expression)


state 141

   78 unary_expression: unary '*' unary_expression .

    $default  reduce using rule 78 (unary_expression)


state 142

   79 unary_expression: unary '/' unary_expression .

    $default  reduce using rule 79 (unary_expression)


state 143

   76 unary_expression: unary '+' unary_expression .

    $default  reduce using rule 76 (unary_expression)


state 144

   77 unary_expression: unary '-' unary_expression .

    $default  reduce using rule 77 (unary_expression)


state 145

   75 unary_expression: value '[' unary_expression . ']'

    ']'  shift, and go to state 160


state 146

   19 type_specifier: TYPEDEF STRUCT IDENTIFIER '{' struct_decl_list '}' IDENTIFIER .

    $default  reduce using rule 19 (type_specifier)


state 147

   22 struct_decl_list: type_specifier declarator '=' CONSTANT . ';'

    ';'  shift, and go to state 161


state 148

   21 struct_decl_list: type_specifier declarator ';' struct_decl_list .

    $default  reduce using rule 21 (struct_decl_list)


state 149

   30 parameter_list: type_specifier declarator ',' parameter_list .

    $default  reduce using rule 30 (parameter_list)


state 150

   49 argument_list: STRUCT IDENTIFIER .
   50              | STRUCT IDENTIFIER . ',' argument_list

    ','  shift, and go to state 162

    $default  reduce using rule 49 (argument_list)


state 151

   51 direct_function: IDENTIFIER '(' argument_list ')' .

    $default  reduce using rule 51 (direct_function)


state 152

   48 argument_list: expression ',' . argument_list

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    STRUCT      shift, and go to state 112
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '('         shift, and go to state 79
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    argument_list     go to state 163
    direct_function   go to state 62
    function_call     go to state 80
    expression        go to state 115
    unary_expression  go to state 82
    unary             go to state 65
    value             go to state 66


state 153

   31 if_statement: IF '(' expression ')' . if_clause
   32             | IF '(' expression ')' . if_clause ELSE statement

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    IF          shift, and go to state 44
    WHILE       shift, and go to state 45
    RETURN      shift, and go to state 46
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    ';'         shift, and go to state 51
    '{'         shift, and go to state 28
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    if_statement        go to state 58
    if_clause           go to state 164
    statement           go to state 165
    compound_statement  go to state 60
    direct_function     go to state 62
    function_call       go to state 63
    unary_expression    go to state 64
    unary               go to state 65
    value               go to state 66


state 154

   35 statement: WHILE '(' expression ')' . statement

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    IF          shift, and go to state 44
    WHILE       shift, and go to state 45
    RETURN      shift, and go to state 46
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    ';'         shift, and go to state 51
    '{'         shift, and go to state 28
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    if_statement        go to state 58
    statement           go to state 166
    compound_statement  go to state 60
    direct_function     go to state 62
    function_call       go to state 63
    unary_expression    go to state 64
    unary               go to state 65
    value               go to state 66


state 155

   59 expression: '(' expression ')' .

    $default  reduce using rule 59 (expression)


state 156

   58 expression: expression ops function_call .

    $default  reduce using rule 58 (expression)


state 157

   57 expression: expression ops unary_expression .

    $default  reduce using rule 57 (expression)


state 158

   80 unary_expression: SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 80 (unary_expression)


state 159

   34 statement: unary_expression '=' expression ';' .

    $default  reduce using rule 34 (statement)


state 160

   75 unary_expression: value '[' unary_expression ']' .

    $default  reduce using rule 75 (unary_expression)


state 161

   22 struct_decl_list: type_specifier declarator '=' CONSTANT ';' .

    $default  reduce using rule 22 (struct_decl_list)


state 162

   50 argument_list: STRUCT IDENTIFIER ',' . argument_list

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    STRUCT      shift, and go to state 112
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    '('         shift, and go to state 79
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    argument_list     go to state 167
    direct_function   go to state 62
    function_call     go to state 80
    expression        go to state 115
    unary_expression  go to state 82
    unary             go to state 65
    value             go to state 66


state 163

   48 argument_list: expression ',' argument_list .

    $default  reduce using rule 48 (argument_list)


state 164

   31 if_statement: IF '(' expression ')' if_clause .
   32             | IF '(' expression ')' if_clause . ELSE statement

    ELSE  shift, and go to state 168

    $default  reduce using rule 31 (if_statement)


state 165

   33 if_clause: statement .

    $default  reduce using rule 33 (if_clause)


state 166

   35 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 35 (statement)


state 167

   50 argument_list: STRUCT IDENTIFIER ',' argument_list .

    $default  reduce using rule 50 (argument_list)


state 168

   32 if_statement: IF '(' expression ')' if_clause ELSE . statement

    IDENTIFIER  shift, and go to state 43
    CONSTANT    shift, and go to state 38
    IF          shift, and go to state 44
    WHILE       shift, and go to state 45
    RETURN      shift, and go to state 46
    SIZEOF      shift, and go to state 47
    '*'         shift, and go to state 48
    '+'         shift, and go to state 49
    '-'         shift, and go to state 50
    ';'         shift, and go to state 51
    '{'         shift, and go to state 28
    '&'         shift, and go to state 53
    '~'         shift, and go to state 54

    if_statement        go to state 58
    statement           go to state 169
    compound_statement  go to state 60
    direct_function     go to state 62
    function_call       go to state 63
    unary_expression    go to state 64
    unary               go to state 65
    value               go to state 66


state 169

   32 if_statement: IF '(' expression ')' if_clause ELSE statement .

    $default  reduce using rule 32 (if_statement)
